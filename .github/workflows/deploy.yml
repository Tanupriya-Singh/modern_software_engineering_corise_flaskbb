# This workflow will deploy the application to the running environment after a successful merge to main

name: deploy

on:
    workflow_run:
        workflows: [test] # Triggered by the test workflow
        types: [completed] # The test workflow must complete
        branches: [main] # Only when main is updated

jobs:
    on-success:
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'success' }} # Only when test completed successfully 
        steps:
            - uses: actions/checkout@v2
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install wheel
                pip install -r requirements-dev.txt
                pip install -e .
      
            - name: Prepare FlaskBB
              run: |
                flaskbb translations compile

            - name: Build binary distribution and upload to artifactory
            # CoRise TODO: implement a conditional step to build the distribution and upload the artifact on push to main
            # use the zip command from deploy.sh for inspiration
              run: echo "implement me"

            - name: Congifure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
                aws-region: "us-east-1" 

            - name: Upload application file to AWS
              run: aws s3 cp flaskbb_deploy-${{github.sha}}.zip s3://flaskbbapp

            - name: Create new application version
              run: |  
                aws elasticbeanstalk create-application-version \
                --application-name flaskbb \
                --source-bundle S3Bucket="flaskbbapp",S3Key="flaskbb_deploy-${{github.sha}}.zip " \
                --version-label "ver-${{ github.sha }}" \
                --description "commit-sha-${{ github.sha }}"

            - name: Deploy application
              run: aws elasticbeanstalk update-environment --environment-name flaskbb-environment --version-label "ver-${{ github.sha }}"
